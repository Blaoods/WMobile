//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/GeneralMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GeneralMap: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GeneralMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GeneralMap"",
    ""maps"": [
        {
            ""name"": ""General"",
            ""id"": ""2df54723-cb6b-420f-b0a0-28266d90f174"",
            ""actions"": [
                {
                    ""name"": ""Touch_1_Contact"",
                    ""type"": ""Button"",
                    ""id"": ""8deeacd4-ec50-4f8a-b968-7d192ede9125"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch_2_Contact"",
                    ""type"": ""Button"",
                    ""id"": ""ea6283ad-6ebd-42b8-9071-27d6d76f2001"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch_1_Position"",
                    ""type"": ""Value"",
                    ""id"": ""5d5864c0-4ea5-4804-9bd2-2eecb730c32f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch_2_Position"",
                    ""type"": ""Value"",
                    ""id"": ""124c45bb-29cc-4dd3-b46f-3a1815413049"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5fa78114-e067-4983-aa29-13c492b6f1d7"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch_1_Contact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32310982-0612-452a-9e13-e6b19825ce88"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch_1_Contact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""104ef131-6c21-4afd-8408-e212c2f2f444"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch_1_Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0683f930-ecb7-4d2f-aa3d-4dd034c42356"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch_1_Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0135762d-ef13-4ffb-9f41-410b60f59e65"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch_2_Contact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27811fa2-97df-4a38-99de-fc850c1a3d69"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch_2_Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // General
        m_General = asset.FindActionMap("General", throwIfNotFound: true);
        m_General_Touch_1_Contact = m_General.FindAction("Touch_1_Contact", throwIfNotFound: true);
        m_General_Touch_2_Contact = m_General.FindAction("Touch_2_Contact", throwIfNotFound: true);
        m_General_Touch_1_Position = m_General.FindAction("Touch_1_Position", throwIfNotFound: true);
        m_General_Touch_2_Position = m_General.FindAction("Touch_2_Position", throwIfNotFound: true);
    }

    ~@GeneralMap()
    {
        UnityEngine.Debug.Assert(!m_General.enabled, "This will cause a leak and performance issues, GeneralMap.General.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // General
    private readonly InputActionMap m_General;
    private List<IGeneralActions> m_GeneralActionsCallbackInterfaces = new List<IGeneralActions>();
    private readonly InputAction m_General_Touch_1_Contact;
    private readonly InputAction m_General_Touch_2_Contact;
    private readonly InputAction m_General_Touch_1_Position;
    private readonly InputAction m_General_Touch_2_Position;
    public struct GeneralActions
    {
        private @GeneralMap m_Wrapper;
        public GeneralActions(@GeneralMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Touch_1_Contact => m_Wrapper.m_General_Touch_1_Contact;
        public InputAction @Touch_2_Contact => m_Wrapper.m_General_Touch_2_Contact;
        public InputAction @Touch_1_Position => m_Wrapper.m_General_Touch_1_Position;
        public InputAction @Touch_2_Position => m_Wrapper.m_General_Touch_2_Position;
        public InputActionMap Get() { return m_Wrapper.m_General; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GeneralActions set) { return set.Get(); }
        public void AddCallbacks(IGeneralActions instance)
        {
            if (instance == null || m_Wrapper.m_GeneralActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GeneralActionsCallbackInterfaces.Add(instance);
            @Touch_1_Contact.started += instance.OnTouch_1_Contact;
            @Touch_1_Contact.performed += instance.OnTouch_1_Contact;
            @Touch_1_Contact.canceled += instance.OnTouch_1_Contact;
            @Touch_2_Contact.started += instance.OnTouch_2_Contact;
            @Touch_2_Contact.performed += instance.OnTouch_2_Contact;
            @Touch_2_Contact.canceled += instance.OnTouch_2_Contact;
            @Touch_1_Position.started += instance.OnTouch_1_Position;
            @Touch_1_Position.performed += instance.OnTouch_1_Position;
            @Touch_1_Position.canceled += instance.OnTouch_1_Position;
            @Touch_2_Position.started += instance.OnTouch_2_Position;
            @Touch_2_Position.performed += instance.OnTouch_2_Position;
            @Touch_2_Position.canceled += instance.OnTouch_2_Position;
        }

        private void UnregisterCallbacks(IGeneralActions instance)
        {
            @Touch_1_Contact.started -= instance.OnTouch_1_Contact;
            @Touch_1_Contact.performed -= instance.OnTouch_1_Contact;
            @Touch_1_Contact.canceled -= instance.OnTouch_1_Contact;
            @Touch_2_Contact.started -= instance.OnTouch_2_Contact;
            @Touch_2_Contact.performed -= instance.OnTouch_2_Contact;
            @Touch_2_Contact.canceled -= instance.OnTouch_2_Contact;
            @Touch_1_Position.started -= instance.OnTouch_1_Position;
            @Touch_1_Position.performed -= instance.OnTouch_1_Position;
            @Touch_1_Position.canceled -= instance.OnTouch_1_Position;
            @Touch_2_Position.started -= instance.OnTouch_2_Position;
            @Touch_2_Position.performed -= instance.OnTouch_2_Position;
            @Touch_2_Position.canceled -= instance.OnTouch_2_Position;
        }

        public void RemoveCallbacks(IGeneralActions instance)
        {
            if (m_Wrapper.m_GeneralActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGeneralActions instance)
        {
            foreach (var item in m_Wrapper.m_GeneralActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GeneralActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GeneralActions @General => new GeneralActions(this);
    public interface IGeneralActions
    {
        void OnTouch_1_Contact(InputAction.CallbackContext context);
        void OnTouch_2_Contact(InputAction.CallbackContext context);
        void OnTouch_1_Position(InputAction.CallbackContext context);
        void OnTouch_2_Position(InputAction.CallbackContext context);
    }
}
